//
// Generated by JavaToPas v1.5 20140918 - 093212
////////////////////////////////////////////////////////////////////////////////
unit java.lang.JClass;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.lang.reflect.JType,
  java.lang.reflect.GenericDeclaration,
  android.net.Proxy,
  java.net.FileNameMap,
  java.security.acl.Permission,
  java.security.cert.Certificate,
  java.security.CodeSigner,
  java.security.Principal,
  java.security.Permission;

type
  JPackage = interface;
  JProtectionDomain = interface;
  JCodeSource = interface;

  JContentHandlerFactory = interface; // merged
  JContentHandler = interface; // merged
  JURLStreamHandlerFactory = interface; // merged
  JURLConnection = interface; // merged
  JURLStreamHandler = interface; // merged
  JURL = interface; // merged
  JURI = interface;

  JMethod = interface; // merged
  JField = interface; // merged
  JConstructor = interface; // merged
  JClass = interface;

  JClassClass = interface(JObjectClass)
    ['{D9F6BE74-B0CD-49F6-B78F-C480064D4E13}']
    function asSubclass(c : JClass) : JClass; cdecl;                            // (Ljava/lang/Class;)Ljava/lang/Class; A: $1
    function cast(obj : JObject) : JObject; cdecl;                              // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function desiredAssertionStatus : boolean; cdecl;                           // ()Z A: $101
    function forName(className : JString) : JClass; cdecl; overload;            // (Ljava/lang/String;)Ljava/lang/Class; A: $9
    function forName(className : JString; shouldInitialize : boolean; classLoader : JClassLoader) : JClass; cdecl; overload;// (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class; A: $9
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getCanonicalName : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $1
    function getClasses : TJavaArray<JClass>; cdecl;                            // ()[Ljava/lang/Class; A: $1
    function getComponentType : JClass; cdecl;                                  // ()Ljava/lang/Class; A: $101
    function getConstructor(parameterTypes : TJavaArray<JClass>) : JConstructor; cdecl;// ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor; A: $81
    function getConstructors : TJavaArray<JConstructor>; cdecl;                 // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $101
    function getDeclaredClasses : TJavaArray<JClass>; cdecl;                    // ()[Ljava/lang/Class; A: $1
    function getDeclaredConstructor(parameterTypes : TJavaArray<JClass>) : JConstructor; cdecl;// ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor; A: $81
    function getDeclaredConstructors : TJavaArray<JConstructor>; cdecl;         // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredField(&name : JString) : JField; cdecl;                 // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getDeclaredFields : TJavaArray<JField>; cdecl;                     // ()[Ljava/lang/reflect/Field; A: $1
    function getDeclaredMethod(&name : JString; parameterTypes : TJavaArray<JClass>) : JMethod; cdecl;// (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; A: $81
    function getDeclaredMethods : TJavaArray<JMethod>; cdecl;                   // ()[Ljava/lang/reflect/Method; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $101
    function getEnclosingClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $101
    function getEnclosingConstructor : JConstructor; cdecl;                     // ()Ljava/lang/reflect/Constructor; A: $101
    function getEnclosingMethod : JMethod; cdecl;                               // ()Ljava/lang/reflect/Method; A: $101
    function getEnumConstants : TJavaArray<JObject>; cdecl;                     // ()[Ljava/lang/Object; A: $1
    function getField(&name : JString) : JField; cdecl;                         // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getFields : TJavaArray<JField>; cdecl;                             // ()[Ljava/lang/reflect/Field; A: $1
    function getGenericInterfaces : TJavaArray<JType>; cdecl;                   // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericSuperclass : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getInterfaces : TJavaArray<JClass>; cdecl;                         // ()[Ljava/lang/Class; A: $101
    function getMethod(&name : JString; parameterTypes : TJavaArray<JClass>) : JMethod; cdecl;// (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method; A: $81
    function getMethods : TJavaArray<JMethod>; cdecl;                           // ()[Ljava/lang/reflect/Method; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage : JPackage; cdecl;                                      // ()Ljava/lang/Package; A: $1
    function getProtectionDomain : JProtectionDomain; cdecl;                    // ()Ljava/security/ProtectionDomain; A: $1
    function getResource(resourceName : JString) : JURL; cdecl;                 // (Ljava/lang/String;)Ljava/net/URL; A: $1
    function getResourceAsStream(resourceName : JString) : JInputStream; cdecl; // (Ljava/lang/String;)Ljava/io/InputStream; A: $1
    function getSigners : TJavaArray<JObject>; cdecl;                           // ()[Ljava/lang/Object; A: $1
    function getSimpleName : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function getSuperclass : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $101
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $21
    function isAnnotation : boolean; cdecl;                                     // ()Z A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isAnonymousClass : boolean; cdecl;                                 // ()Z A: $101
    function isArray : boolean; cdecl;                                          // ()Z A: $1
    function isAssignableFrom(JClassparam0 : JClass) : boolean; cdecl;          // (Ljava/lang/Class;)Z A: $101
    function isEnum : boolean; cdecl;                                           // ()Z A: $1
    function isInstance(JObjectparam0 : JObject) : boolean; cdecl;              // (Ljava/lang/Object;)Z A: $101
    function isInterface : boolean; cdecl;                                      // ()Z A: $101
    function isLocalClass : boolean; cdecl;                                     // ()Z A: $1
    function isMemberClass : boolean; cdecl;                                    // ()Z A: $1
    function isPrimitive : boolean; cdecl;                                      // ()Z A: $101
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function newInstance : JObject; cdecl;                                      // ()Ljava/lang/Object; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/Class')]
  JClass = interface(JObject)
    ['{BB782FDA-B06F-4CAB-B239-0A22232C7F45}']
    function asSubclass(c : JClass) : JClass; cdecl;                            // (Ljava/lang/Class;)Ljava/lang/Class; A: $1
    function cast(obj : JObject) : JObject; cdecl;                              // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getCanonicalName : JString; cdecl;                                 // ()Ljava/lang/String; A: $1
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $1
    function getClasses : TJavaArray<JClass>; cdecl;                            // ()[Ljava/lang/Class; A: $1
    function getConstructors : TJavaArray<JConstructor>; cdecl;                 // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredClasses : TJavaArray<JClass>; cdecl;                    // ()[Ljava/lang/Class; A: $1
    function getDeclaredConstructors : TJavaArray<JConstructor>; cdecl;         // ()[Ljava/lang/reflect/Constructor; A: $1
    function getDeclaredField(&name : JString) : JField; cdecl;                 // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getDeclaredFields : TJavaArray<JField>; cdecl;                     // ()[Ljava/lang/reflect/Field; A: $1
    function getDeclaredMethods : TJavaArray<JMethod>; cdecl;                   // ()[Ljava/lang/reflect/Method; A: $1
    function getEnumConstants : TJavaArray<JObject>; cdecl;                     // ()[Ljava/lang/Object; A: $1
    function getField(&name : JString) : JField; cdecl;                         // (Ljava/lang/String;)Ljava/lang/reflect/Field; A: $1
    function getFields : TJavaArray<JField>; cdecl;                             // ()[Ljava/lang/reflect/Field; A: $1
    function getGenericInterfaces : TJavaArray<JType>; cdecl;                   // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericSuperclass : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getMethods : TJavaArray<JMethod>; cdecl;                           // ()[Ljava/lang/reflect/Method; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage : JPackage; cdecl;                                      // ()Ljava/lang/Package; A: $1
    function getProtectionDomain : JProtectionDomain; cdecl;                    // ()Ljava/security/ProtectionDomain; A: $1
    function getResource(resourceName : JString) : JURL; cdecl;                 // (Ljava/lang/String;)Ljava/net/URL; A: $1
    function getResourceAsStream(resourceName : JString) : JInputStream; cdecl; // (Ljava/lang/String;)Ljava/io/InputStream; A: $1
    function getSigners : TJavaArray<JObject>; cdecl;                           // ()[Ljava/lang/Object; A: $1
    function getSimpleName : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function isAnnotation : boolean; cdecl;                                     // ()Z A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isArray : boolean; cdecl;                                          // ()Z A: $1
    function isEnum : boolean; cdecl;                                           // ()Z A: $1
    function isLocalClass : boolean; cdecl;                                     // ()Z A: $1
    function isMemberClass : boolean; cdecl;                                    // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function newInstance : JObject; cdecl;                                      // ()Ljava/lang/Object; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJClass = class(TJavaGenericImport<JClassClass, JClass>)
  end;
  
  JConstructorClass = interface(JObjectClass)
    ['{37B86396-68FF-41B8-ACA3-838876EA459C}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function newInstance(args : TJavaArray<JObject>) : JObject; cdecl;          // ([Ljava/lang/Object;)Ljava/lang/Object; A: $81
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/reflect/Constructor')]
  JConstructor = interface(JObject)
    ['{E6B4C2E9-0766-4DD2-86FD-3BD96D04C9A4}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJConstructor = class(TJavaGenericImport<JConstructorClass, JConstructor>)
  end;


  JFieldClass = interface(JObjectClass)
    ['{79AE6313-319B-4CC9-895A-A33BD10CDF26}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function get(&object : JObject) : JObject; cdecl;                           // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getBoolean(&object : JObject) : boolean; cdecl;                    // (Ljava/lang/Object;)Z A: $1
    function getByte(&object : JObject) : Byte; cdecl;                          // (Ljava/lang/Object;)B A: $1
    function getChar(&object : JObject) : Char; cdecl;                          // (Ljava/lang/Object;)C A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDouble(&object : JObject) : Double; cdecl;                      // (Ljava/lang/Object;)D A: $1
    function getFloat(&object : JObject) : Single; cdecl;                       // (Ljava/lang/Object;)F A: $1
    function getGenericType : JType; cdecl;                                     // ()Ljava/lang/reflect/Type; A: $1
    function getInt(&object : JObject) : Integer; cdecl;                        // (Ljava/lang/Object;)I A: $1
    function getLong(&object : JObject) : Int64; cdecl;                         // (Ljava/lang/Object;)J A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getShort(&object : JObject) : SmallInt; cdecl;                     // (Ljava/lang/Object;)S A: $1
    function getType : JClass; cdecl;                                           // ()Ljava/lang/Class; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isEnumConstant : boolean; cdecl;                                   // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure &set(&object : JObject; value : JObject) ; cdecl;                 // (Ljava/lang/Object;Ljava/lang/Object;)V A: $1
    procedure setBoolean(&object : JObject; value : boolean) ; cdecl;           // (Ljava/lang/Object;Z)V A: $1
    procedure setByte(&object : JObject; value : Byte) ; cdecl;                 // (Ljava/lang/Object;B)V A: $1
    procedure setChar(&object : JObject; value : Char) ; cdecl;                 // (Ljava/lang/Object;C)V A: $1
    procedure setDouble(&object : JObject; value : Double) ; cdecl;             // (Ljava/lang/Object;D)V A: $1
    procedure setFloat(&object : JObject; value : Single) ; cdecl;              // (Ljava/lang/Object;F)V A: $1
    procedure setInt(&object : JObject; value : Integer) ; cdecl;               // (Ljava/lang/Object;I)V A: $1
    procedure setLong(&object : JObject; value : Int64) ; cdecl;                // (Ljava/lang/Object;J)V A: $1
    procedure setShort(&object : JObject; value : SmallInt) ; cdecl;            // (Ljava/lang/Object;S)V A: $1
  end;

  [JavaSignature('java/lang/reflect/Field')]
  JField = interface(JObject)
    ['{FDEED5B9-BA5C-4C07-92F4-269A27AF8699}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function get(&object : JObject) : JObject; cdecl;                           // (Ljava/lang/Object;)Ljava/lang/Object; A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getBoolean(&object : JObject) : boolean; cdecl;                    // (Ljava/lang/Object;)Z A: $1
    function getByte(&object : JObject) : Byte; cdecl;                          // (Ljava/lang/Object;)B A: $1
    function getChar(&object : JObject) : Char; cdecl;                          // (Ljava/lang/Object;)C A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDouble(&object : JObject) : Double; cdecl;                      // (Ljava/lang/Object;)D A: $1
    function getFloat(&object : JObject) : Single; cdecl;                       // (Ljava/lang/Object;)F A: $1
    function getGenericType : JType; cdecl;                                     // ()Ljava/lang/reflect/Type; A: $1
    function getInt(&object : JObject) : Integer; cdecl;                        // (Ljava/lang/Object;)I A: $1
    function getLong(&object : JObject) : Int64; cdecl;                         // (Ljava/lang/Object;)J A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getShort(&object : JObject) : SmallInt; cdecl;                     // (Ljava/lang/Object;)S A: $1
    function getType : JClass; cdecl;                                           // ()Ljava/lang/Class; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isEnumConstant : boolean; cdecl;                                   // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure &set(&object : JObject; value : JObject) ; cdecl;                 // (Ljava/lang/Object;Ljava/lang/Object;)V A: $1
    procedure setBoolean(&object : JObject; value : boolean) ; cdecl;           // (Ljava/lang/Object;Z)V A: $1
    procedure setByte(&object : JObject; value : Byte) ; cdecl;                 // (Ljava/lang/Object;B)V A: $1
    procedure setChar(&object : JObject; value : Char) ; cdecl;                 // (Ljava/lang/Object;C)V A: $1
    procedure setDouble(&object : JObject; value : Double) ; cdecl;             // (Ljava/lang/Object;D)V A: $1
    procedure setFloat(&object : JObject; value : Single) ; cdecl;              // (Ljava/lang/Object;F)V A: $1
    procedure setInt(&object : JObject; value : Integer) ; cdecl;               // (Ljava/lang/Object;I)V A: $1
    procedure setLong(&object : JObject; value : Int64) ; cdecl;                // (Ljava/lang/Object;J)V A: $1
    procedure setShort(&object : JObject; value : SmallInt) ; cdecl;            // (Ljava/lang/Object;S)V A: $1
  end;

  TJField = class(TJavaGenericImport<JFieldClass, JField>)
  end;

  JMethodClass = interface(JObjectClass)
    ['{AA86B71F-C247-4835-849B-38CB17E93D2A}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDefaultValue : JObject; cdecl;                                  // ()Ljava/lang/Object; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericReturnType : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getReturnType : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function invoke(receiver : JObject; args : TJavaArray<JObject>) : JObject; cdecl;// (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object; A: $81
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isBridge : boolean; cdecl;                                         // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/reflect/Method')]
  JMethod = interface(JObject)
    ['{D5BA6016-7EF5-48F2-96F5-E752FCB8C568}']
    function equals(&object : JObject) : boolean; cdecl;                        // (Ljava/lang/Object;)Z A: $1
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaringClass : JClass; cdecl;                                 // ()Ljava/lang/Class; A: $1
    function getDefaultValue : JObject; cdecl;                                  // ()Ljava/lang/Object; A: $1
    function getExceptionTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getGenericExceptionTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericParameterTypes : TJavaArray<JType>; cdecl;               // ()[Ljava/lang/reflect/Type; A: $1
    function getGenericReturnType : JType; cdecl;                               // ()Ljava/lang/reflect/Type; A: $1
    function getModifiers : Integer; cdecl;                                     // ()I A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getParameterAnnotations : TJavaArray<TJavaArray<JAnnotation>>; cdecl;// ()[[Ljava/lang/annotation/Annotation; A: $1
    function getParameterTypes : TJavaArray<JClass>; cdecl;                     // ()[Ljava/lang/Class; A: $1
    function getReturnType : JClass; cdecl;                                     // ()Ljava/lang/Class; A: $1
    function getTypeParameters : TJavaArray<JTypeVariable>; cdecl;              // ()[Ljava/lang/reflect/TypeVariable; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isBridge : boolean; cdecl;                                         // ()Z A: $1
    function isSynthetic : boolean; cdecl;                                      // ()Z A: $1
    function isVarArgs : boolean; cdecl;                                        // ()Z A: $1
    function toGenericString : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJMethod = class(TJavaGenericImport<JMethodClass, JMethod>)
  end;

  JURIClass = interface(JObjectClass)
    ['{5F97F08D-6C41-43A1-8824-6D3C56060429}']
    function compareTo(uri : JURI) : Integer; cdecl;                            // (Ljava/net/URI;)I A: $1
    function create(uri : JString) : JURI; cdecl;                               // (Ljava/lang/String;)Ljava/net/URI; A: $9
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getFragment : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRawAuthority : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getRawFragment : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getRawPath : JString; cdecl;                                       // ()Ljava/lang/String; A: $1
    function getRawQuery : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getRawSchemeSpecificPart : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getRawUserInfo : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getScheme : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function getSchemeSpecificPart : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(scheme : JString; authority : JString; path : JString; query : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; host : JString; path : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; schemeSpecificPart : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(scheme : JString; userInfo : JString; host : JString; port : Integer; path : JString; query : JString; fragment : JString) : JURI; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(spec : JString) : JURI; cdecl; overload;                      // (Ljava/lang/String;)V A: $1
    function isAbsolute : boolean; cdecl;                                       // ()Z A: $1
    function isOpaque : boolean; cdecl;                                         // ()Z A: $1
    function normalize : JURI; cdecl;                                           // ()Ljava/net/URI; A: $1
    function parseServerAuthority : JURI; cdecl;                                // ()Ljava/net/URI; A: $1
    function relativize(relative : JURI) : JURI; cdecl;                         // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function resolve(relative : JString) : JURI; cdecl; overload;               // (Ljava/lang/String;)Ljava/net/URI; A: $1
    function resolve(relative : JURI) : JURI; cdecl; overload;                  // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function toASCIIString : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURL : JURL; cdecl;                                               // ()Ljava/net/URL; A: $1
  end;

  [JavaSignature('java/net/URI')]
  JURI = interface(JObject)
    ['{7C37DD3B-8EC5-4BC5-9130-DC12051CEC31}']
    function compareTo(uri : JURI) : Integer; cdecl;                            // (Ljava/net/URI;)I A: $1
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getFragment : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRawAuthority : JString; cdecl;                                  // ()Ljava/lang/String; A: $1
    function getRawFragment : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getRawPath : JString; cdecl;                                       // ()Ljava/lang/String; A: $1
    function getRawQuery : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getRawSchemeSpecificPart : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getRawUserInfo : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getScheme : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function getSchemeSpecificPart : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAbsolute : boolean; cdecl;                                       // ()Z A: $1
    function isOpaque : boolean; cdecl;                                         // ()Z A: $1
    function normalize : JURI; cdecl;                                           // ()Ljava/net/URI; A: $1
    function parseServerAuthority : JURI; cdecl;                                // ()Ljava/net/URI; A: $1
    function relativize(relative : JURI) : JURI; cdecl;                         // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function resolve(relative : JString) : JURI; cdecl; overload;               // (Ljava/lang/String;)Ljava/net/URI; A: $1
    function resolve(relative : JURI) : JURI; cdecl; overload;                  // (Ljava/net/URI;)Ljava/net/URI; A: $1
    function toASCIIString : JString; cdecl;                                    // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURL : JURL; cdecl;                                               // ()Ljava/net/URL; A: $1
  end;

  TJURI = class(TJavaGenericImport<JURIClass, JURI>)
  end;

  // Merged from: .\android-19\java.net.URL.pas
  JURLClass = interface(JObjectClass)
    ['{DAB87458-AC27-4093-B8B7-284DC1667341}']
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $11
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $11
    function getDefaultPort : Integer; cdecl;                                   // ()I A: $1
    function getFile : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getProtocol : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRef : JString; cdecl;                                           // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function init(context : JURL; spec : JString) : JURL; cdecl; overload;      // (Ljava/net/URL;Ljava/lang/String;)V A: $1
    function init(context : JURL; spec : JString; handler : JURLStreamHandler) : JURL; cdecl; overload;// (Ljava/net/URL;Ljava/lang/String;Ljava/net/URLStreamHandler;)V A: $1
    function init(protocol : JString; host : JString; &file : JString) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V A: $1
    function init(protocol : JString; host : JString; port : Integer; &file : JString) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V A: $1
    function init(protocol : JString; host : JString; port : Integer; &file : JString; handler : JURLStreamHandler) : JURL; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/net/URLStreamHandler;)V A: $1
    function init(spec : JString) : JURL; cdecl; overload;                      // (Ljava/lang/String;)V A: $1
    function openConnection : JURLConnection; cdecl; overload;                  // ()Ljava/net/URLConnection; A: $1
    function openConnection(proxy : JProxy) : JURLConnection; cdecl; overload;  // (Ljava/net/Proxy;)Ljava/net/URLConnection; A: $1
    function openStream : JInputStream; cdecl;                                  // ()Ljava/io/InputStream; A: $11
    function sameFile(otherURL : JURL) : boolean; cdecl;                        // (Ljava/net/URL;)Z A: $1
    function toExternalForm : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURI : JURI; cdecl;                                               // ()Ljava/net/URI; A: $1
    procedure setURLStreamHandlerFactory(factory : JURLStreamHandlerFactory) ; cdecl;// (Ljava/net/URLStreamHandlerFactory;)V A: $29
  end;

  [JavaSignature('java/net/URL')]
  JURL = interface(JObject)
    ['{6F6B1EDD-0C42-46AC-80F6-DCE85E2F77AB}']
    function equals(o : JObject) : boolean; cdecl;                              // (Ljava/lang/Object;)Z A: $1
    function getAuthority : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function getDefaultPort : Integer; cdecl;                                   // ()I A: $1
    function getFile : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getHost : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPath : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPort : Integer; cdecl;                                          // ()I A: $1
    function getProtocol : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function getQuery : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function getRef : JString; cdecl;                                           // ()Ljava/lang/String; A: $1
    function getUserInfo : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function openConnection : JURLConnection; cdecl; overload;                  // ()Ljava/net/URLConnection; A: $1
    function openConnection(proxy : JProxy) : JURLConnection; cdecl; overload;  // (Ljava/net/Proxy;)Ljava/net/URLConnection; A: $1
    function sameFile(otherURL : JURL) : boolean; cdecl;                        // (Ljava/net/URL;)Z A: $1
    function toExternalForm : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toURI : JURI; cdecl;                                               // ()Ljava/net/URI; A: $1
  end;

  TJURL = class(TJavaGenericImport<JURLClass, JURL>)
  end;


  // Merged from: .\android-19\java.net.URLStreamHandler.pas
  JURLStreamHandlerClass = interface(JObjectClass)
    ['{89771810-2118-4253-A256-1616FA286805}']
    function init : JURLStreamHandler; cdecl;                                   // ()V A: $1
  end;

  [JavaSignature('java/net/URLStreamHandler')]
  JURLStreamHandler = interface(JObject)
    ['{6C457664-AE29-40ED-8F05-8F7329C6644D}']
  end;

  TJURLStreamHandler = class(TJavaGenericImport<JURLStreamHandlerClass, JURLStreamHandler>)
  end;


  // Merged from: .\android-19\java.net.URLConnection.pas
  JURLConnectionClass = interface(JObjectClass)
    ['{1DAFA799-2E19-4F8C-B3B6-BF98BB9207DC}']
    function getAllowUserInteraction : boolean; cdecl;                          // ()Z A: $1
    function getConnectTimeout : Integer; cdecl;                                // ()I A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $1
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function getContentEncoding : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getContentLength : Integer; cdecl;                                 // ()I A: $1
    function getContentType : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getDate : Int64; cdecl;                                            // ()J A: $1
    function getDefaultAllowUserInteraction : boolean; cdecl;                   // ()Z A: $9
    function getDefaultRequestProperty(field : JString) : JString; deprecated; cdecl;// (Ljava/lang/String;)Ljava/lang/String; A: $9
    function getDefaultUseCaches : boolean; cdecl;                              // ()Z A: $1
    function getDoInput : boolean; cdecl;                                       // ()Z A: $1
    function getDoOutput : boolean; cdecl;                                      // ()Z A: $1
    function getExpiration : Int64; cdecl;                                      // ()J A: $1
    function getFileNameMap : JFileNameMap; cdecl;                              // ()Ljava/net/FileNameMap; A: $9
    function getHeaderField(key : JString) : JString; cdecl; overload;          // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getHeaderField(pos : Integer) : JString; cdecl; overload;          // (I)Ljava/lang/String; A: $1
    function getHeaderFieldDate(field : JString; defaultValue : Int64) : Int64; cdecl;// (Ljava/lang/String;J)J A: $1
    function getHeaderFieldInt(field : JString; defaultValue : Integer) : Integer; cdecl;// (Ljava/lang/String;I)I A: $1
    function getHeaderFieldKey(posn : Integer) : JString; cdecl;                // (I)Ljava/lang/String; A: $1
    function getHeaderFields : JMap; cdecl;                                     // ()Ljava/util/Map; A: $1
    function getIfModifiedSince : Int64; cdecl;                                 // ()J A: $1
    function getInputStream : JInputStream; cdecl;                              // ()Ljava/io/InputStream; A: $1
    function getLastModified : Int64; cdecl;                                    // ()J A: $1
    function getOutputStream : JOutputStream; cdecl;                            // ()Ljava/io/OutputStream; A: $1
    function getPermission : JPermission; cdecl;                                // ()Ljava/security/Permission; A: $1
    function getReadTimeout : Integer; cdecl;                                   // ()I A: $1
    function getRequestProperties : JMap; cdecl;                                // ()Ljava/util/Map; A: $1
    function getRequestProperty(field : JString) : JString; cdecl;              // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getURL : JURL; cdecl;                                              // ()Ljava/net/URL; A: $1
    function getUseCaches : boolean; cdecl;                                     // ()Z A: $1
    function guessContentTypeFromName(url : JString) : JString; cdecl;          // (Ljava/lang/String;)Ljava/lang/String; A: $9
    function guessContentTypeFromStream(&is : JInputStream) : JString; cdecl;   // (Ljava/io/InputStream;)Ljava/lang/String; A: $9
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure addRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure connect ; cdecl;                                                  // ()V A: $401
    procedure setAllowUserInteraction(newValue : boolean) ; cdecl;              // (Z)V A: $1
    procedure setConnectTimeout(timeoutMillis : Integer) ; cdecl;               // (I)V A: $1
    procedure setContentHandlerFactory(contentFactory : JContentHandlerFactory) ; cdecl;// (Ljava/net/ContentHandlerFactory;)V A: $29
    procedure setDefaultAllowUserInteraction(allows : boolean) ; cdecl;         // (Z)V A: $9
    procedure setDefaultRequestProperty(field : JString; value : JString) ; deprecated; cdecl;// (Ljava/lang/String;Ljava/lang/String;)V A: $9
    procedure setDefaultUseCaches(newValue : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setDoInput(newValue : boolean) ; cdecl;                           // (Z)V A: $1
    procedure setDoOutput(newValue : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setFileNameMap(map : JFileNameMap) ; cdecl;                       // (Ljava/net/FileNameMap;)V A: $9
    procedure setIfModifiedSince(newValue : Int64) ; cdecl;                     // (J)V A: $1
    procedure setReadTimeout(timeoutMillis : Integer) ; cdecl;                  // (I)V A: $1
    procedure setRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure setUseCaches(newValue : boolean) ; cdecl;                         // (Z)V A: $1
  end;

  [JavaSignature('java/net/URLConnection')]
  JURLConnection = interface(JObject)
    ['{4464FCA5-F645-4590-93B3-2DB5CA41E74F}']
    function getAllowUserInteraction : boolean; cdecl;                          // ()Z A: $1
    function getConnectTimeout : Integer; cdecl;                                // ()I A: $1
    function getContent : JObject; cdecl; overload;                             // ()Ljava/lang/Object; A: $1
    function getContent(types : TJavaArray<JClass>) : JObject; cdecl; overload; // ([Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function getContentEncoding : JString; cdecl;                               // ()Ljava/lang/String; A: $1
    function getContentLength : Integer; cdecl;                                 // ()I A: $1
    function getContentType : JString; cdecl;                                   // ()Ljava/lang/String; A: $1
    function getDate : Int64; cdecl;                                            // ()J A: $1
    function getDefaultUseCaches : boolean; cdecl;                              // ()Z A: $1
    function getDoInput : boolean; cdecl;                                       // ()Z A: $1
    function getDoOutput : boolean; cdecl;                                      // ()Z A: $1
    function getExpiration : Int64; cdecl;                                      // ()J A: $1
    function getHeaderField(key : JString) : JString; cdecl; overload;          // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getHeaderField(pos : Integer) : JString; cdecl; overload;          // (I)Ljava/lang/String; A: $1
    function getHeaderFieldDate(field : JString; defaultValue : Int64) : Int64; cdecl;// (Ljava/lang/String;J)J A: $1
    function getHeaderFieldInt(field : JString; defaultValue : Integer) : Integer; cdecl;// (Ljava/lang/String;I)I A: $1
    function getHeaderFieldKey(posn : Integer) : JString; cdecl;                // (I)Ljava/lang/String; A: $1
    function getHeaderFields : JMap; cdecl;                                     // ()Ljava/util/Map; A: $1
    function getIfModifiedSince : Int64; cdecl;                                 // ()J A: $1
    function getInputStream : JInputStream; cdecl;                              // ()Ljava/io/InputStream; A: $1
    function getLastModified : Int64; cdecl;                                    // ()J A: $1
    function getOutputStream : JOutputStream; cdecl;                            // ()Ljava/io/OutputStream; A: $1
    function getPermission : JPermission; cdecl;                                // ()Ljava/security/Permission; A: $1
    function getReadTimeout : Integer; cdecl;                                   // ()I A: $1
    function getRequestProperties : JMap; cdecl;                                // ()Ljava/util/Map; A: $1
    function getRequestProperty(field : JString) : JString; cdecl;              // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function getURL : JURL; cdecl;                                              // ()Ljava/net/URL; A: $1
    function getUseCaches : boolean; cdecl;                                     // ()Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    procedure addRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure connect ; cdecl;                                                  // ()V A: $401
    procedure setAllowUserInteraction(newValue : boolean) ; cdecl;              // (Z)V A: $1
    procedure setConnectTimeout(timeoutMillis : Integer) ; cdecl;               // (I)V A: $1
    procedure setDefaultUseCaches(newValue : boolean) ; cdecl;                  // (Z)V A: $1
    procedure setDoInput(newValue : boolean) ; cdecl;                           // (Z)V A: $1
    procedure setDoOutput(newValue : boolean) ; cdecl;                          // (Z)V A: $1
    procedure setIfModifiedSince(newValue : Int64) ; cdecl;                     // (J)V A: $1
    procedure setReadTimeout(timeoutMillis : Integer) ; cdecl;                  // (I)V A: $1
    procedure setRequestProperty(field : JString; newValue : JString) ; cdecl;  // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    procedure setUseCaches(newValue : boolean) ; cdecl;                         // (Z)V A: $1
  end;

  TJURLConnection = class(TJavaGenericImport<JURLConnectionClass, JURLConnection>)
  end;


  // Merged from: .\android-19\java.net.URLStreamHandlerFactory.pas
  JURLStreamHandlerFactoryClass = interface(JObjectClass)
    ['{C3533CE5-9882-464A-B399-257F02DFDD4F}']
    function createURLStreamHandler(JStringparam0 : JString) : JURLStreamHandler; cdecl;// (Ljava/lang/String;)Ljava/net/URLStreamHandler; A: $401
  end;

  [JavaSignature('java/net/URLStreamHandlerFactory')]
  JURLStreamHandlerFactory = interface(JObject)
    ['{C47816CA-D748-4432-A04C-9A30C8A3356C}']
    function createURLStreamHandler(JStringparam0 : JString) : JURLStreamHandler; cdecl;// (Ljava/lang/String;)Ljava/net/URLStreamHandler; A: $401
  end;

  TJURLStreamHandlerFactory = class(TJavaGenericImport<JURLStreamHandlerFactoryClass, JURLStreamHandlerFactory>)
  end;


  JContentHandlerClass = interface(JObjectClass)
    ['{22C9E84D-F7C4-4B3E-8D29-5769E29ADC09}']
    function getContent(JURLConnectionparam0 : JURLConnection) : JObject; cdecl; overload;// (Ljava/net/URLConnection;)Ljava/lang/Object; A: $401
    function getContent(uConn : JURLConnection; types : TJavaArray<JClass>) : JObject; cdecl; overload;// (Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object; A: $1
    function init : JContentHandler; cdecl;                                     // ()V A: $1
  end;

  [JavaSignature('java/net/ContentHandler')]
  JContentHandler = interface(JObject)
    ['{F1901FB3-E01F-4EE4-8354-6E95BDCAC363}']
    function getContent(JURLConnectionparam0 : JURLConnection) : JObject; cdecl; overload;// (Ljava/net/URLConnection;)Ljava/lang/Object; A: $401
    function getContent(uConn : JURLConnection; types : TJavaArray<JClass>) : JObject; cdecl; overload;// (Ljava/net/URLConnection;[Ljava/lang/Class;)Ljava/lang/Object; A: $1
  end;

  TJContentHandler = class(TJavaGenericImport<JContentHandlerClass, JContentHandler>)
  end;


  JContentHandlerFactoryClass = interface(JObjectClass)
    ['{FC8FF419-C447-4C5F-A954-1332DFC48969}']
    function createContentHandler(JStringparam0 : JString) : JContentHandler; cdecl;// (Ljava/lang/String;)Ljava/net/ContentHandler; A: $401
  end;

  [JavaSignature('java/net/ContentHandlerFactory')]
  JContentHandlerFactory = interface(JObject)
    ['{DC280927-B80C-40B8-8EB8-885068B41FC7}']
    function createContentHandler(JStringparam0 : JString) : JContentHandler; cdecl;// (Ljava/lang/String;)Ljava/net/ContentHandler; A: $401
  end;

  TJContentHandlerFactory = class(TJavaGenericImport<JContentHandlerFactoryClass, JContentHandlerFactory>)
  end;

  JCodeSourceClass = interface(JObjectClass)
    ['{C0A0FB6D-00C1-4417-AA9D-B1DF619062A1}']
    function getCertificates : TJavaArray<JCertificate>; cdecl;                 // ()[Ljava/security/cert/Certificate; A: $11
    function getCodeSigners : TJavaArray<JCodeSigner>; cdecl;                   // ()[Ljava/security/CodeSigner; A: $11
    function getLocation : JURL; cdecl;                                         // ()Ljava/net/URL; A: $11
    function implies(cs : JCodeSource) : boolean; cdecl;                        // (Ljava/security/CodeSource;)Z A: $1
    function init(location : JURL; certs : TJavaArray<JCertificate>) : JCodeSource; cdecl; overload;// (Ljava/net/URL;[Ljava/security/cert/Certificate;)V A: $1
    function init(location : JURL; signers : TJavaArray<JCodeSigner>) : JCodeSource; cdecl; overload;// (Ljava/net/URL;[Ljava/security/CodeSigner;)V A: $1
  end;

  [JavaSignature('java/security/CodeSource')]
  JCodeSource = interface(JObject)
    ['{FDEDD287-0BCF-4A5E-B4C5-2358A03B6D92}']
    function implies(cs : JCodeSource) : boolean; cdecl;                        // (Ljava/security/CodeSource;)Z A: $1
  end;

  TJCodeSource = class(TJavaGenericImport<JCodeSourceClass, JCodeSource>)
  end;

  JProtectionDomainClass = interface(JObjectClass)
    ['{20096D7C-D089-4C35-A664-79BA2E7D123A}']
    function getClassLoader : JClassLoader; cdecl;                              // ()Ljava/lang/ClassLoader; A: $11
    function getCodeSource : JCodeSource; cdecl;                                // ()Ljava/security/CodeSource; A: $11
    function getPermissions : JPermissionCollection; cdecl;                     // ()Ljava/security/PermissionCollection; A: $11
    function getPrincipals : TJavaArray<JPrincipal>; cdecl;                     // ()[Ljava/security/Principal; A: $11
    function implies(permission : JPermission) : boolean; cdecl;                // (Ljava/security/Permission;)Z A: $1
    function init(cs : JCodeSource; permissions : JPermissionCollection) : JProtectionDomain; cdecl; overload;// (Ljava/security/CodeSource;Ljava/security/PermissionCollection;)V A: $1
    function init(cs : JCodeSource; permissions : JPermissionCollection; cl : JClassLoader; principals : TJavaArray<JPrincipal>) : JProtectionDomain; cdecl; overload;// (Ljava/security/CodeSource;Ljava/security/PermissionCollection;Ljava/lang/ClassLoader;[Ljava/security/Principal;)V A: $1
  end;

  [JavaSignature('java/security/ProtectionDomain')]
  JProtectionDomain = interface(JObject)
    ['{6DC4931A-F1A6-4509-AD22-D71415543BA6}']
    function implies(permission : JPermission) : boolean; cdecl;                // (Ljava/security/Permission;)Z A: $1
  end;

  TJProtectionDomain = class(TJavaGenericImport<JProtectionDomainClass, JProtectionDomain>)
  end;

  JPackageClass = interface(JObjectClass)
    ['{075114C7-ECED-4808-A9CA-55788745E2B0}']
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getImplementationTitle : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getImplementationVendor : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function getImplementationVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getPackage(packageName : JString) : JPackage; cdecl;               // (Ljava/lang/String;)Ljava/lang/Package; A: $9
    function getPackages : TJavaArray<JPackage>; cdecl;                         // ()[Ljava/lang/Package; A: $9
    function getSpecificationTitle : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getSpecificationVendor : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getSpecificationVersion : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isCompatibleWith(version : JString) : boolean; cdecl;              // (Ljava/lang/String;)Z A: $1
    function isSealed : boolean; cdecl; overload;                               // ()Z A: $1
    function isSealed(url : JURL) : boolean; cdecl; overload;                   // (Ljava/net/URL;)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('java/lang/Package')]
  JPackage = interface(JObject)
    ['{A78FE29D-0A62-466F-B378-28AA7F1C34BA}']
    function getAnnotation(annotationType : JClass) : JAnnotation; cdecl;       // (Ljava/lang/Class;)Ljava/lang/annotation/Annotation; A: $1
    function getAnnotations : TJavaArray<JAnnotation>; cdecl;                   // ()[Ljava/lang/annotation/Annotation; A: $1
    function getDeclaredAnnotations : TJavaArray<JAnnotation>; cdecl;           // ()[Ljava/lang/annotation/Annotation; A: $1
    function getImplementationTitle : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getImplementationVendor : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function getImplementationVersion : JString; cdecl;                         // ()Ljava/lang/String; A: $1
    function getName : JString; cdecl;                                          // ()Ljava/lang/String; A: $1
    function getSpecificationTitle : JString; cdecl;                            // ()Ljava/lang/String; A: $1
    function getSpecificationVendor : JString; cdecl;                           // ()Ljava/lang/String; A: $1
    function getSpecificationVersion : JString; cdecl;                          // ()Ljava/lang/String; A: $1
    function hashCode : Integer; cdecl;                                         // ()I A: $1
    function isAnnotationPresent(annotationType : JClass) : boolean; cdecl;     // (Ljava/lang/Class;)Z A: $1
    function isCompatibleWith(version : JString) : boolean; cdecl;              // (Ljava/lang/String;)Z A: $1
    function isSealed : boolean; cdecl; overload;                               // ()Z A: $1
    function isSealed(url : JURL) : boolean; cdecl; overload;                   // (Ljava/net/URL;)Z A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJPackage = class(TJavaGenericImport<JPackageClass, JPackage>)
  end;
implementation

end.
